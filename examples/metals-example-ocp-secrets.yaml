apiVersion: v1
kind: List
metadata: {}
items:
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: metals-example
    name: metals-example
  spec:
    ports:
    - name: 8443-tcp
      port: 8443
      protocol: TCP
      targetPort: 8443
    selector:
      app: metals-example
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: metals-example
    name: metals-example
  spec:
    port:
      targetPort: 8443-tcp
    to:
      kind: Service
      name: metals-example
      weight: 100
    wildcardPolicy: None
    tls:
      termination: passthrough
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: metals-example
    name: metals-example
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: metals-example
    template:
      metadata:
        labels:
          app: metals-example
      spec:
        containers:
        #
        # This would be the service to which you are adding mTLS
        # For example, my service is called 'metals-example'
        # IMPORTANT: I am not exposing any of my service's ports
        # because I do not want my service to be accessible directly
        # from outside of the pod.  the mTLS nginx container must
        # be the only thing exposed, otherwise mTLS could be bypassed
        #
        - image: quay.io/freedomben/metals-example:latest
          name: metals-example
          imagePullPolicy: Always
          env:
          - name: APP_ROOT
            value: /opt/app-root
          - name: HOME
            value: /opt/app-root/src
        #
        # This is where I add the metals image to my pod.  I
        # expose port 8443 because that is the entrypoint I want
        # all clients to go through.  The metals image will
        # perform authentication and all other TLS operations,
        # and then forward traffic to my service 'metals-example'
        # in reverse proxy mode.  Because all traffic takes place
        # inside a pod, it is OK for my service to be HTTP only
        #
        - image: quay.io/freedomben/metals:latest
          name: metals
          imagePullPolicy: Always
          #
          # 8443 is our mtls entrypoint.  It is the only port we
          # want to expose to ensure that no clients can bypass
          # mTLS and get directly to the service
          #
          ports:
          - containerPort: 8443
            protocol: TCP
          #
          # the metals image is configured entirely through
          # environment variables.  See the README.md file for
          # more detail about what all of these do. Some of them
          # are optional with sane defaults, but I've included
          # them here as a reference
          #
          envFrom:
          - configMapRef:
              name: metals-example-settings
          - secretRef:
              name: metals-example-private-key
- apiVersion: v1
  kind: ConfigMap
  metadata:
    labels:
      app: metals-example
    name: metals-example-settings
  data:
    # Setting to "off" will completely disable TLS!
    METALS_SSL: "on"
    # Setting to "off" will keep TLS enabled but will not
    # authenticate the client. Useful if you only need TLS
    # (especially during testing)
    METALS_SSL_VERIFY_CLIENT: "on"
    # Setting to true enables verbose output
    METALS_DEBUG: "true"
    # Set to the port your service is listening on
    METALS_FORWARD_PORT: "8080"
    # If your service uses http, set to "http"
    # If your service uses https, set to "https"
    # This value is passed verbatim to nginx
    METALS_PROXY_PASS_PROTOCOL: "http"
    # Hostname of your service.  It should only differ
    # from "127.0.0.1" if your service is not running
    # in this pod (which is highly recommended against doing).
    # Prefer 127.0.0.1 to localhost to avoid unnecessary
    # lookups by the nginx resolver
    METALS_PROXY_PASS_HOST: "127.0.0.1"
    # This last section is the certificates needed for nginx
    # The private key is in a secret
    METALS_PUBLIC_CERT: |
      -----BEGIN CERTIFICATE-----
      MIIJQDCCBSigAwIBAgICEAEwDQYJKoZIhvcNAQELBQAwVzELMAkGA1UEBhMCVVMx
      CzAJBgNVBAgMAklEMQ4wDAYDVQQHDAVCb2lzZTEXMBUGA1UECgwOQm9pc2UgQmFu
      ayBMVEQxEjAQBgNVBAMMCWxvY2FsaG9zdDAeFw0yMDAzMTMwMzA5MTVaFw0yMjAz
      MTMwMzA5MTVaMEcxEjAQBgNVBAMMCWxvY2FsaG9zdDELMAkGA1UECAwCSUQxCzAJ
      BgNVBAYTAlVTMRcwFQYDVQQKDA5Cb2lzZSBCYW5rIExURDCCAiIwDQYJKoZIhvcN
      AQEBBQADggIPADCCAgoCggIBAMWGVAa5z083J5Co4PGxbX1vJWNv8YIsvTL3tI41
      hMoRT3iE2oKefssXVGiyXVjjENqlJ+SzjhttLQei9nBF4EEBA2WtF/DWzQCiPyQI
      QVEFICGv6o8ELxe97wfLVF1alpDYb3jWiUoIC3xHRjZAU0r+E/zyYn4M9IvD9OT/
      6wWP99QEj32nhgkg8G7nyzYs1tEC0s5M0qXyDM577vgtVMX159PontEdylhutY8V
      tlmwhm5sNJ6Kqo3PkObbx+Yz3j/WJM6yOtN7NE5hbhXYahqsvNOtTzDEub8J/scZ
      wKyV85sb+29t+RsofqJu+HpQx6VSEnpnu9MOY1akh3l7e/HIunKMt/UXN0JeqhNM
      6h9gIpaghowySEBHVILrbDY8sIhby1vHbMcKxy43gaQfmUqAFsohXodrg2/3M3bA
      fPy71hpqqeL2btGrQ8ugOBQj6v+Zd0378VEPxkprtfDhxyHgGt7tdw1c8bQNBPdE
      qQSCjcBkwN/H1kcR79t11TsBsv7dOTN89UoQ5ZU+YZkM0FKRKXVhcK5qlXtTELxB
      uC0SSs3JZaY6Z/ZscYKezOcUOIR0sqABkHXy6RG1Q1u1tohtP6JqVTr/JD0k048p
      ZUW+0Nf6ezdHbr/ORr+EtXgaI+nXk2uByhS2J2vh6fRZbqtefdF1EW4dT22ojsGn
      SR69AgMBAAGjggIkMIICIDAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBRnMpv1
      axHElLksx0NBy3ev5jaE3DAfBgNVHSMEGDAWgBRbeHCM2WTwVs49KGA43I6uohqs
      WTALBgNVHQ8EBAMCAaYwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMGwG
      A1UdHwRlMGMwMqAwoC6GLGh0dHA6Ly9wa2kuc3BhcmtsaW5nY2EuY29tL1NwYXJr
      bGluZ1Jvb3QuY3JsMC2gK6AphidodHRwOi8vcGtpLmJhY2t1cC5jb20vU3Bhcmts
      aW5nUm9vdC5jcmwwWgYDVR0RBFMwUYIJbG9jYWxob3N0gkRtdGxzLW5naW54LWRl
      di1jbDEtbjFrMC1zcmUtbW9uaXRvcmluZy5hcHBzLmMxLW9jcC1kYzEuZGV2Zmcu
      cmJjLmNvbTCB1gYIKwYBBQUHAQEEgckwgcYwOAYIKwYBBQUHMAKGLGh0dHA6Ly9w
      a2kuc3BhcmtsaW5nY2EuY29tL1NwYXJrbGluZ1Jvb3QuY3J0MDMGCCsGAQUFBzAC
      hidodHRwOi8vcGtpLmJhY2t1cC5jb20vU3BhcmtsaW5nUm9vdC5jcnQwLAYIKwYB
      BQUHMAGGIGh0dHA6Ly9wa2kuc3BhcmtsaW5nY2EuY29tL29jc3AvMCcGCCsGAQUF
      BzABhhtodHRwOi8vcGtpLmJhY2t1cC5jb20vb2NzcC8wDQYJKoZIhvcNAQELBQAD
      ggQBAMTF4+pE0lzvBoHHX4RwXek/ASTOfqDCsN43EqxTjyWUS9Zob7Uw3DTnhKP1
      kQDwel8GbXVbKAoCMCXH8UYl/+VXtqX40AsxBja5MYjJPsKusJPuD5MI9ttwi8J3
      9HqLHYfZw2MhWHYC40bqFvK7BEtxb5CgU7qE8w6NRXOJAOipeibO54K9TjyW9EwD
      xBDZ/kl2SgdxgIB/AJpyef53PDs1XS+La8GeJmPZZXsSDOQhlfb7oCxdd6Gl4qyx
      Zmo1z4CdPVBTHb9elS+Jyaea6e8LthRyEFymmvNV1tE13WMphjq6h7RapCjVEomn
      eApnW6T7CJ2eAHDGsrztYDCG04QjR//6P1QJN+a97ULg48S768W3CqPXcZn6N+4E
      Xf1/7zHvazhEjzzcDgSbANwCWEiENQSSpyrVBfJvoo7pih5+ad4MJkpUmU0WjisZ
      TByvJCIzPqIxicr3H0VWBnyOd8DUxXp2qFLyiSu5PwrAZq8S6kmxI5pMxckWcFXd
      UT8mlkL1gqLVFrLDGmbyJDOxiHxSknq/vfiFwR7TpHKW7ZicwVIHlkWAbrYv719i
      nXya+lyBZIRbYLnmo7CQ04J9nfsrxxyoB1rmU/zAfvLtCeIoaGaBH4x7QcnHtfLz
      sGYcdbhA6n2FyCz1s5EJeJfXKAtIth3XZG0bGn1uDx+4qP8NpuK8DS7ItsLREg5x
      ytHIjnRUM+0gI4h229oD5FHyvurBrFuAhEjdzke4Cj/yBJ7WlQzkWQbHXU01ua/U
      VftuZ6zm/4HFFSeJhTGnYW8aJ1InOdYsZIv0Lao4S+aDrBw9zCKJjte6S4DErvje
      vZnzb8jLLgdsozQgA6tNQwH2XUtpZxBoBtSxFWLJjp3ti4epvNgqnAqFRj+zU8u/
      Ux5PF+WI++xO2FbNJmhWro9T6yz1xjGs2+dFcidio5AJaYk+HbvAGI6/FVqCtqND
      HXfk56SqrFT/gU4qsMa804T/jOvZG2CFE6N8iCRh6VIkLarTvKQXmTSgWQczVPSX
      rOeiPqcBX51GuIuElP+iqAbhCM0oLf7quNgaGNCXKT6YTfXBZAT+XxaxFSTcXzV3
      Eqq0nG9O6Vqi+Q7vwj5P9vmd07sbdHVQmjvDUSegfvDdVQzM0GYXDIiTVOV8x5fr
      7KeAWaJFKBfQCkVVN1/38Er4rANiQibAPvPgsg9X6cFGZP4XpSZfYEEzqyH9ywT2
      BbJK/vAdV9rcUYdJknrWP+rXg9YW70Ei+ob0nnIHxHUCPBpsM1vr59I3XE1mvUnn
      LPXIhYWoMTYp/CB7+YQ4xIj8LQ79obmae2GrCpFkOzOhw+sjn2k7VEEW60ZvD56Z
      2cKquipmE7CU4f5Yj6eOgaML3k4=
      -----END CERTIFICATE-----
    METALS_CLIENT_TRUST_CHAIN: &rootca |
      -----BEGIN CERTIFICATE-----
      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
      -----END CERTIFICATE-----
    METALS_SERVER_TRUST_CHAIN: *rootca
- apiVersion: v1
  kind: Secret
  metadata:
    labels:
      app: metals-example
    name: metals-example-private-key
  type: Opaque
  stringData:
    # Private key for service
    METALS_PRIVATE_KEY: |
      -----BEGIN RSA PRIVATE KEY-----
      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
      -----END RSA PRIVATE KEY-----
